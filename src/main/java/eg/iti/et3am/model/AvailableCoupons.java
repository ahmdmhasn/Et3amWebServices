package eg.iti.et3am.model;
// Generated May 16, 2019 11:54:55 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AvailableCoupons generated by hbm2java
 */
@Entity
@Table(name="available_coupons"
    ,catalog="heroku_24f192cc0bbf6af"
)
public class AvailableCoupons  implements java.io.Serializable {


     private Integer availableCouponId;
     private Coupons coupons;
     private Date date;
     private int status;

    public AvailableCoupons() {
    }

    public AvailableCoupons(Coupons coupons, Date date, int status) {
       this.coupons = coupons;
       this.date = date;
       this.status = status;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="available_coupon_id", unique=true, nullable=false)
    public Integer getAvailableCouponId() {
        return this.availableCouponId;
    }
    
    public void setAvailableCouponId(Integer availableCouponId) {
        this.availableCouponId = availableCouponId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="coupons_coupon_id", nullable=false)
    public Coupons getCoupons() {
        return this.coupons;
    }
    
    public void setCoupons(Coupons coupons) {
        this.coupons = coupons;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date", nullable=false, length=10)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

    
    @Column(name="status", nullable=false)
    public int getStatus() {
        return this.status;
    }
    
    public void setStatus(int status) {
        this.status = status;
    }




}


