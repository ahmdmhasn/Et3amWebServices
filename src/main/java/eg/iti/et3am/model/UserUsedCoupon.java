package eg.iti.et3am.model;
// Generated May 16, 2019 11:54:55 PM by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserUsedCoupon generated by hbm2java
 */
@Entity
@Table(name = "user_used_coupon", catalog = "heroku_24f192cc0bbf6af")
public class UserUsedCoupon implements Serializable, Cloneable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "used_coupon_id", unique = true, nullable = false)
    private Integer usedCouponId;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "restaurant_id", nullable = false)
    private Restaurants restaurants;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_reserve_coupon_reserved_coupon_id", nullable = false)
    private UserReserveCoupon userReserveCoupon;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "use_date", nullable = false, length = 26)
    private Date useDate;
    @Column(name = "price", nullable = false, precision = 12, scale = 0)
    private float price;
    @Column(name = "status", nullable = false)
    private int status;
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userUsedCoupon")
    private Set<RemainingBalance> remainingBalances = new HashSet<>(0);
    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="message_id")
    private ThanksMessages thanksMessages;

    public UserUsedCoupon() {
    }

    public UserUsedCoupon(Restaurants restaurants, UserReserveCoupon userReserveCoupon, Date useDate, float price, int status) {
        this.restaurants = restaurants;
        this.userReserveCoupon = userReserveCoupon;
        this.useDate = useDate;
        this.price = price;
        this.status = status;
    }

    public UserUsedCoupon(Restaurants restaurants, UserReserveCoupon userReserveCoupon, Date useDate, float price, int status, Set<RemainingBalance> remainingBalances) {
        this.restaurants = restaurants;
        this.userReserveCoupon = userReserveCoupon;
        this.useDate = useDate;
        this.price = price;
        this.status = status;
        this.remainingBalances = remainingBalances;
    }

    
    public Integer getUsedCouponId() {
        return this.usedCouponId;
    }

    public void setUsedCouponId(Integer usedCouponId) {
        this.usedCouponId = usedCouponId;
    }

    public Restaurants getRestaurants() {
        return this.restaurants;
    }

    public void setRestaurants(Restaurants restaurants) {
        this.restaurants = restaurants;
    }

    public UserReserveCoupon getUserReserveCoupon() {
        return this.userReserveCoupon;
    }

    public void setUserReserveCoupon(UserReserveCoupon userReserveCoupon) {
        this.userReserveCoupon = userReserveCoupon;
    }

    public Date getUseDate() {
        return this.useDate;
    }

    public void setUseDate(Date useDate) {
        this.useDate = useDate;
    }

    public float getPrice() {
        return this.price;
    }

    public void setPrice(float price) {
        this.price = price;
    }

    public int getStatus() {
        return this.status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    public Set<RemainingBalance> getRemainingBalances() {
        return this.remainingBalances;
    }

    public void setRemainingBalances(Set<RemainingBalance> remainingBalances) {
        this.remainingBalances = remainingBalances;
    }
    
    public ThanksMessages getThanksMessages() {
        return this.thanksMessages;
    }
    
    public void setThanksMessages(ThanksMessages thanksMessages) {
        this.thanksMessages = thanksMessages;
    }
    
@Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }
}
